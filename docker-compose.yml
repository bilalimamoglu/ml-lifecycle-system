version: '3'
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"

  mlflow-server:
    build: ./mlflow
    image: mlflow-server
    ports:
      - "5000:5000"
    environment:
      MLFLOW_TRACKING_URI: http://mlflow-server:5000
      MLFLOW_S3_ENDPOINT_URL: https://s3.amazonaws.com
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      MLFLOW_BACKEND_STORE_URI: postgresql+psycopg2://mlflow:mlflow@postgres:5432/mlflow
      MLFLOW_DEFAULT_ARTIFACT_ROOT: s3://mlflow-artifacts-bilalimg/
    depends_on:
      - postgres
    networks:
      - default




  airflow:
    build: ./orchestration
    restart: always
    depends_on:
      - postgres
      - mlflow-server
    hostname: airflow
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__EXECUTOR: 'LocalExecutor'
      AIRFLOW__CORE__HOSTNAME_CALLABLE: 'socket.gethostname'
      AWS_SHARED_CREDENTIALS_FILE: /opt/airflow/.aws/credentials
      AWS_CONFIG_FILE: /opt/airflow/.aws/config
      MLFLOW_TRACKING_URI: 'http://mlflow-server:5000'
    volumes:
      - ./orchestration/dags:/opt/airflow/dags
      - ./orchestration/data:/opt/airflow/data
      - $HOME/.aws:/home/airflow/.aws:ro  # Mount AWS credentials
    ports:
      - "8080:8080"
    command: /bin/bash -c "/opt/airflow/setup_aws_env.sh && /entrypoint.sh"

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/alerting:/etc/grafana/provisioning/alerting
      - ./grafana/provisioning/notifiers:/etc/grafana/provisioning/notifiers
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=mailhog:1025
      - GF_SMTP_FROM_ADDRESS=alerts@example.com
    depends_on:
      - prometheus
      - mailhog

  mailhog:
    image: mailhog/mailhog
    platform: linux/amd64
    ports:
      - "8025:8025"
      - "1025:1025"
    volumes:
      - mailhog_data:/mailhog/data

  exporter:
    build: ./monitoring/exporter
    ports:
      - "8000:8000"
    volumes:
      - $HOME/.aws:/root/.aws:ro  # Adjust as needed
    depends_on:
      - mlflow-server

  model-serving:
    build: ./serving
    ports:
      - "5001:5001"
    environment:
      MLFLOW_TRACKING_URI: 'http://mlflow-server:5000'
    depends_on:
      - mlflow-server
    networks:
      - default

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  mailhog_data:
