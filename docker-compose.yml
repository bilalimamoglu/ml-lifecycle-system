version: '3'
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mlflow-server:
    build: ./mlflow
    image: mlflow-server
    ports:
      - "5000:5000"
    environment:
      MLFLOW_S3_ENDPOINT_URL: https://s3.amazonaws.com
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      MLFLOW_BACKEND_STORE_URI: sqlite:///mlflow.db
      MLFLOW_DEFAULT_ARTIFACT_ROOT: s3://mlflow-artifacts-bilalimg/
    volumes:
      - mlflow_db:/mlflow_db

  airflow:
    build: ./orchestration
    restart: always
    depends_on:
      - postgres
      - mlflow-server
    hostname: airflow
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__EXECUTOR: 'LocalExecutor'
      AIRFLOW__CORE__HOSTNAME_CALLABLE: 'socket.gethostname'
      AWS_SHARED_CREDENTIALS_FILE: /opt/airflow/.aws/credentials
      AWS_CONFIG_FILE: /opt/airflow/.aws/config
      MLFLOW_TRACKING_URI: 'http://mlflow-server:5000'
    volumes:
      - ./orchestration/dags:/opt/airflow/dags
      - ./orchestration/data:/opt/airflow/data
      - $HOME/.aws:/home/airflow/.aws:ro  # Mount AWS credentials
    ports:
      - "8080:8080"
    command: /bin/bash -c "/opt/airflow/setup_aws_env.sh && /entrypoint.sh"

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  exporter:
    build: ./monitoring/exporter
    ports:
      - "8000:8000"

volumes:
  postgres_data:
  mlflow_db:
  grafana_data:
    driver: local
